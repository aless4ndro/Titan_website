*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  background: #222;
}

#cCarousel {
  position: relative;
  max-width: 900px;
  margin: auto;
}

#cCarousel .arrow {
  position: absolute;
  top: 50%;
  display: flex;
  width: 45px;
  height: 45px;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  z-index: 1;
  font-size: 26px;
  color: white;
  background: #00000072;
  cursor: pointer;
}

#cCarousel #prev {
  left: 0px;
}

#cCarousel #next {
  right: 0px;
}

#carousel-vp {
  width: 930px;
  height: 400px;
  display: flex;
  align-items: center;
  position: relative;
  overflow: hidden;
  margin: auto;
}

@media (max-width: 770px) {
  #carousel-vp {
    width: 510px;
  }
}

@media (max-width: 510px) {
  #carousel-vp {
    width: 250px;
  }
}

#cCarousel #cCarousel-inner {
  display: flex;
  position: absolute;
  transition: 0.3s ease-in-out;
  gap: 10px;
  left: 0px;
}

.cCarousel-item {
  width: 300px;
  height: 300px;
  border: 2px solid white;
  border-radius: 15px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  position: relative;
  transform: perspective(500px) rotateY(-5deg);//on utilise la propriété perspective pour définir la perspective de l'élément parent, et on utilise la propriété rotateY pour faire pivoter l'élément sur l'axe Y.
  transform-style: preserve-3d;//on utilise la propriété transform-style pour définir comment les éléments enfants sont affichés dans l'espace 3D.
}

.cCarousel-item::before, 
.cCarousel-item::after {
  content: '';
  position: absolute;
  top: 10px;
  right: 0px;
  width: calc(50% - 20px);
  height: calc(100% - 20px);
  border: 2px solid white;
  border-radius: 15px;
  background: #ccc;
  z-index: -1;
}

.cCarousel-item::before {
  transform: translateZ(-1px) scale(0.90);//on untilise la propriété translateZ pour déplacer l'élément sur l'axe Z, et on utilise la propriété scale pour réduire la taille de l'élément.
}

.cCarousel-item::after {//carte derrière
  transform: translateZ(-2px) scale(0.85);
}


.cCarousel-item img {
  width: 100%;
  object-fit: cover;
  height: 100%;
  color: white;
}




